{"version":3,"sources":["reportWebVitals.ts","util/localStorage.ts","interfaces/ICookies.ts","util/Translation.tsx","components/LanguageSelection.tsx","components/Settings.tsx","components/Header.tsx","App.tsx","Start.tsx","util/importJson.ts","components/ParsedText.tsx","components/Result.tsx","components/PrivacyStatement.tsx","components/Imprint.tsx","util/shuffleAnswers.ts","util/sameValues.ts","components/question/Answers.tsx","components/question/QuestionText.tsx","components/question/Question.tsx","components/test/TestNavigation.tsx","components/test/TestProgress.tsx","components/test/Test.tsx","components/test/TestManager.tsx","util/generateTest.ts","Routes.tsx","i18n/i18n.ts","Root.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useLocalStorage","key","initialValue","useState","JSON","parse","localStorage","getItem","error","storedValue","setStoredValue","useEffect","onStorageUpdate","e","detail","window","addEventListener","removeEventListener","value","setItem","stringify","event","CustomEvent","dispatchEvent","setLocalStorage","getLocalStorage","removeLocalStorage","removeItem","QuestionState","TestMode","Translation","children","t","useTranslation","LanguageSelection","i18n","language","selectedLang","setSelectedLang","FormControl","variant","InputLabel","id","Select","labelId","displayEmpty","onChange","lang","target","console","log","changeLanguage","label","MenuItem","Settings","areSettingsOpen","setAreSettingsOpen","settings","setSettings","settingsButton","useRef","useDangerouslySetInnerHTML","setUseDangerouslySetInnerHTML","newSettings","ref","IconButton","aria-label","aria-controls","aria-haspopup","onClick","color","Popover","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","anchorEl","current","className","FormControlLabel","control","Checkbox","checked","name","Header","history","useHistory","theme","useTheme","isDrawerOpen","setIsDrawerOpen","AppBar","position","Toolbar","edge","push","style","cursor","flexGrow","Typography","SwipeableDrawer","anchor","onOpen","display","flexFlow","height","alignItems","width","padding","spacing","mixins","toolbar","justifyContent","Divider","ListItem","button","ListItemIcon","ListItemText","primary","margin","packageJSON","version","App","Start","fileName","setFileName","testOptions","setTestOptions","randomOrder","setRandomOrder","count","setCount","mode","Normal","setMode","availableQuestions","questionSet","Object","keys","questionSelectValue","setQuestionSelectValue","Paper","elevation","marginBottom","undefined","map","stopPropagation","disabled","values","TextField","type","InputLabelProps","shrink","parseInt","Button","component","inputField","document","getElementById","files","length","fr","FileReader","onload","fileNameShort","replace","result","item","index","correct","toast","success","readAsText","importJSON","hidden","warning","ParsedText","words","split","isLoading","setIsLoading","word","dangerouslySetInnerHTML","__html","includes","CircularProgress","onLoad","onError","href","substring","rel","autoClose","src","Result","currentTest","allQuestions","questions","correctAnswers","wrongAnswers","givenAnswers","forEach","String","given","correctPercent","Math","round","answer","Accordion","AccordionSummary","expandIcon","AccordionDetails","questionOrder","questionIndex","question","isNaN","answers","PrivacyStatement","Imprint","shuffleAnswers","oldCorrect","temporaryValue","randomIndex","currentIndex","floor","random","sameValues","base","check","same","Answers","selected","setCurrentAnswer","showCorrect","handleChange","Radio","QuestionText","Question","currentAnswer","TestNavigation","props","next","currentState","checkAnswers","timeoutId","TestProgress","active","inputValue","setInputValue","size","prev","min","max","step","parsedValue","clearTimeout","setTimeout","goTo","Test","progress","test","setCurrentTest","stats","setStats","findIndex","info","pageNumber","currentTestNew","usedOptions","state","Correct","Wrong","newStats","answerHistory","time","Date","getTime","TestManager","useParams","setTest","find","WrongOnly","filter","order","generatedQuestions","generatedIndex","generateTest","Routes","path","use","LanguageDetector","initReactI18next","init","resources","en","translations","de","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","Root","basename","homepage","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Sentry","dsn","autoSessionTracking","integrations","Integrations","BrowserTracing","CaptureConsole","levels","tracesSampleRate","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7794a635.chunk.js","sourcesContent":["import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import { useEffect, useState } from \"react\";\n\nexport function useLocalStorage<T = any>(key: string, initialValue?: T): [T | undefined, (value: T) => void] {\n    const [storedValue, setStoredValue] = useState(() => {\n        try {\n            return JSON.parse(localStorage.getItem(key) ?? \"\") as T;\n        } catch (error) {\n            return initialValue;\n        }\n    });\n\n    const setValue = (value: T) => {\n        window.localStorage.setItem(key, JSON.stringify(value));\n        setStoredValue(value);\n\n        const event = new CustomEvent<string>(\"storageUpdate\", { detail: key });\n        window.dispatchEvent(event);\n    };\n\n    useEffect(() => {\n        const onStorageUpdate = (e: CustomEvent<string>) => {\n            if (e.detail === key) {\n                try {\n                    setStoredValue(JSON.parse(localStorage.getItem(key) ?? \"\") as T);\n                } catch (error) {}\n            }\n        };\n\n        window.addEventListener(\"storageUpdate\", onStorageUpdate as EventListener);\n        return () => window.removeEventListener(\"storageUpdate\", onStorageUpdate as EventListener);\n    });\n\n    return [storedValue, setValue];\n}\nexport function setLocalStorage<T = any>(key: string, value: T) {\n    window.localStorage.setItem(key, JSON.stringify(value));\n\n    const event = new CustomEvent<string>(\"storageUpdate\", { detail: key });\n    window.dispatchEvent(event);\n}\n\nexport function getLocalStorage<T = any>(key: string): T | undefined {\n    try {\n        return JSON.parse(localStorage.getItem(key) ?? \"\");\n    } catch (error) {\n        return undefined;\n    }\n}\nexport function removeLocalStorage(key: string): void {\n    localStorage.removeItem(key);\n    const event = new CustomEvent<string>(\"storageUpdate\", { detail: key });\n    window.dispatchEvent(event);\n}\n","import { GivenAnswers } from \"./IGivenAnswer\";\nimport { IQuestion } from \"./IQuestion\";\n\nexport interface ICookies {\n    settings?: ISettings;\n    questions?: IQuestionSets;\n    stats?: IStats;\n    testOptions?: ITestOptions;\n    currentTest?: ICurrentTest;\n}\nexport interface IStats {\n    [name: string]: {\n        [id: number]: IStat;\n    };\n}\nexport interface IStat {\n    answerHistory: {\n        result: QuestionState;\n        time: number;\n    }[];\n    currentState: QuestionState;\n}\nexport enum QuestionState {\n    Wrong = \"wrong\",\n    Correct = \"correct\",\n}\nexport enum TestMode {\n    Normal = \"normal\",\n    WrongOnly = \"wrongOnly\",\n}\nexport interface ISettings {\n    useDangerouslySetInnerHTML?: boolean;\n}\nexport interface ITestOptions {\n    mode?: TestMode;\n    randomOrder?: boolean;\n    count?: number;\n    questionSet?: string;\n}\nexport interface IQuestionSets {\n    [name: string]: IQuestion[];\n}\nexport interface ICurrentTest {\n    questionOrder: number[];\n    usedOptions: string;\n    givenAnswers: GivenAnswers[];\n}\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\ninterface TranslationProps {\n    children: string;\n}\nconst Translation = ({ children }: TranslationProps) => {\n    const { t } = useTranslation();\n    return <>{t(children)}</>;\n};\nexport default Translation;\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport Translation from \"../util/Translation\";\n\n/**\n * With this the user can change its language\n */\nconst LanguageSelection = () => {\n    const { i18n } = useTranslation();\n    const [selectedLang, setSelectedLang] = useState<string>(i18n.language);\n    const changeLanguage = (lang: string): void => {\n        console.log(\"changed lang to \", lang);\n\n        setSelectedLang(lang);\n        i18n.changeLanguage(lang);\n    };\n\n    return (\n        <FormControl variant=\"outlined\">\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n                <Translation>selectLang</Translation>\n            </InputLabel>\n\n            <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                value={selectedLang}\n                displayEmpty\n                onChange={(e) => changeLanguage(e.target.value as string)}\n                label={<Translation>selectLang</Translation>}\n                variant=\"outlined\"\n            >\n                <MenuItem key={\"de-DE\"} value={\"de-DE\"}>\n                    Deutsch\n                </MenuItem>{\" \"}\n                <MenuItem key={\"en-US\"} value={\"en-US\"}>\n                    English\n                </MenuItem>\n            </Select>\n        </FormControl>\n    );\n};\nexport default LanguageSelection;\n","import React from \"react\";\nimport { Checkbox, FormControlLabel, IconButton, Popover } from \"@material-ui/core\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { ISettings } from \"../interfaces/ICookies\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport { useLocalStorage } from \"../util/localStorage\";\nimport LanguageSelection from \"./LanguageSelection\";\nimport Translation from \"../util/Translation\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Settings = () => {\n    const [areSettingsOpen, setAreSettingsOpen] = useState<boolean>(false);\n    const { t } = useTranslation();\n    const [settings, setSettings] = useLocalStorage<ISettings>(\"settings\");\n    const settingsButton = useRef<HTMLDivElement>(null);\n\n    const [useDangerouslySetInnerHTML, setUseDangerouslySetInnerHTML] = useState<boolean>(\n        settings?.useDangerouslySetInnerHTML ?? true\n    );\n\n    useEffect(() => {\n        let newSettings = settings ?? {};\n        newSettings = { ...newSettings };\n        newSettings.useDangerouslySetInnerHTML = useDangerouslySetInnerHTML;\n        setSettings(newSettings);\n    }, [useDangerouslySetInnerHTML]);\n    return (\n        <>\n            <div ref={settingsButton}>\n                <IconButton\n                    aria-label={t(\"settings\")}\n                    aria-controls=\"menu-appbar\"\n                    aria-haspopup=\"true\"\n                    onClick={() => setAreSettingsOpen(!areSettingsOpen)}\n                    color=\"inherit\"\n                >\n                    <SettingsIcon />\n                </IconButton>\n            </div>\n            <Popover\n                anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"right\",\n                }}\n                transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"right\",\n                }}\n                open={areSettingsOpen}\n                onClose={() => setAreSettingsOpen(!areSettingsOpen)}\n                anchorEl={settingsButton.current}\n            >\n                <div className=\"settings\">\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={useDangerouslySetInnerHTML}\n                                onChange={(e) => setUseDangerouslySetInnerHTML(e.target.checked)}\n                                name=\"checkedB\"\n                                color=\"primary\"\n                            />\n                        }\n                        label={<Translation>allowHTML</Translation>}\n                    />\n                    <LanguageSelection />\n                </div>\n            </Popover>\n        </>\n    );\n};\nexport default Settings;\n","import {\n    AppBar,\n    Divider,\n    IconButton,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    SwipeableDrawer,\n    Toolbar,\n    Typography,\n    useTheme,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Settings from \"./Settings\";\nimport packageJSON from \"../../package.json\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Translation from \"../util/Translation\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport SecurityIcon from \"@material-ui/icons/Security\";\nimport AlternateEmailIcon from \"@material-ui/icons/AlternateEmail\";\n\nconst Header = () => {\n    const history = useHistory();\n    const theme = useTheme();\n    const [isDrawerOpen, setIsDrawerOpen] = useState<boolean>(false);\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <IconButton\n                    edge=\"start\"\n                    color=\"inherit\"\n                    aria-label=\"menu\"\n                    onClick={() => setIsDrawerOpen(!isDrawerOpen)}\n                >\n                    <MenuIcon />\n                </IconButton>\n                <div onClick={() => history.push(\"/\")} style={{ cursor: \"pointer\", flexGrow: 1 }}>\n                    <Typography variant=\"h6\">Klausurtrainer</Typography>\n                </div>\n                <Settings></Settings>\n            </Toolbar>\n            <SwipeableDrawer\n                anchor={\"left\"}\n                open={isDrawerOpen}\n                onClose={() => setIsDrawerOpen(!isDrawerOpen)}\n                onOpen={() => setIsDrawerOpen(!isDrawerOpen)}\n            >\n                <div\n                    onClick={() => setIsDrawerOpen(!isDrawerOpen)}\n                    style={{ display: \"flex\", flexFlow: \"column\", height: \"100%\" }}\n                >\n                    <div\n                        style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            width: 240,\n                            padding: theme.spacing(0, 1),\n                            // necessary for content to be below app bar\n                            ...theme.mixins.toolbar,\n                            justifyContent: \"flex-end\",\n                        }}\n                    >\n                        <IconButton onClick={() => setIsDrawerOpen(!isDrawerOpen)}>\n                            <ChevronLeftIcon />\n                        </IconButton>\n                    </div>\n                    <Divider />\n                    <div style={{ flexGrow: 1 }}>\n                        <ListItem button key={\"privacypolicy\"} onClick={() => history.push(\"/privacy\")}>\n                            <ListItemIcon>\n                                <SecurityIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={<Translation>privacypolicy</Translation>} />\n                        </ListItem>\n                        <ListItem button key={\"imprint\"} onClick={() => history.push(\"/imprint\")}>\n                            <ListItemIcon>\n                                <AlternateEmailIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={<Translation>imprint</Translation>} />\n                        </ListItem>\n                    </div>\n                    <div style={{ margin: \"0 auto\", padding: \"1rem 0\" }}>Version {packageJSON.version}</div>\n                </div>\n            </SwipeableDrawer>\n        </AppBar>\n    );\n};\nexport default Header;\n","import React from \"react\";\nimport Header from \"./components/Header\";\n\ninterface AppProps {\n    children: JSX.Element | JSX.Element[];\n}\nconst App = ({ children }: AppProps) => {\n    return (\n        <div>\n            <Header />\n            <div className=\"App\">{children}</div>\n        </div>\n    );\n};\nexport default App;\n","import React, { useEffect, useState } from \"react\";\n\nimport {\n    Button,\n    Checkbox,\n    FormControl,\n    FormControlLabel,\n    InputLabel,\n    MenuItem,\n    Paper,\n    Select,\n    TextField,\n} from \"@material-ui/core\";\nimport { toast } from \"react-toastify\";\nimport { importJSON } from \"./util/importJson\";\nimport { removeLocalStorage, useLocalStorage } from \"./util/localStorage\";\nimport { IQuestionSets, ITestOptions, TestMode } from \"./interfaces/ICookies\";\nimport { useHistory } from \"react-router-dom\";\nimport Translation from \"./util/Translation\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nfunction Start() {\n    const [fileName, setFileName] = useState<string>();\n\n    const history = useHistory();\n    const [testOptions, setTestOptions] = useLocalStorage<ITestOptions>(\"testOptions\");\n    removeLocalStorage(\"currentTest\");\n\n    const [randomOrder, setRandomOrder] = useState<boolean>(testOptions?.randomOrder ?? true);\n    const [count, setCount] = useState<number>(testOptions?.count ?? 10);\n    const [mode, setMode] = useState<TestMode>(testOptions?.mode ?? TestMode.Normal);\n    const [availableQuestions] = useLocalStorage<IQuestionSets>(\"questions\");\n    const [questionSelectValue, setQuestionSelectValue] = useState<string>(\n        testOptions?.questionSet ?? Object.keys(availableQuestions ?? {})[0] ?? \"\"\n    );\n\n    useEffect(() => {\n        let newTestOptions = testOptions ?? {};\n        newTestOptions = { mode, count, randomOrder, questionSet: questionSelectValue };\n\n        setTestOptions(newTestOptions);\n    }, [mode, randomOrder, count, questionSelectValue]);\n\n    return (\n        <div>\n            <Paper elevation={3}>\n                <h2 style={{ marginBottom: \"1rem\" }}>\n                    <Translation>startHeading</Translation>\n                </h2>\n                <div className=\"startSettings\">\n                    <FormControl variant=\"outlined\">\n                        {availableQuestions && (\n                            <InputLabel id=\"demo-simple-select-outlined-label\">\n                                <Translation>selectQuestions</Translation>\n                            </InputLabel>\n                        )}\n                        <Select\n                            labelId=\"demo-simple-select-outlined-label\"\n                            id=\"demo-simple-select-outlined\"\n                            value={questionSelectValue}\n                            displayEmpty\n                            onChange={(e) => setQuestionSelectValue(e.target.value as string)}\n                            label={availableQuestions ? <Translation>selectQuestions</Translation> : undefined}\n                            variant=\"outlined\"\n                        >\n                            {availableQuestions ? (\n                                Object.keys(availableQuestions).map((key) => (\n                                    <MenuItem key={key} value={key}>\n                                        <div className=\"questionsetSelect\">\n                                            <span>{key}</span>\n                                            <EditIcon\n                                                onClick={(e) => {\n                                                    e.stopPropagation();\n                                                    history.push(\"/questionSet/\" + key);\n                                                }}\n                                            />\n                                        </div>\n                                    </MenuItem>\n                                ))\n                            ) : (\n                                <MenuItem value=\"\" disabled>\n                                    <Translation>noImprtedQuestions</Translation>\n                                </MenuItem>\n                            )}\n                        </Select>\n                    </FormControl>\n                    <FormControl variant=\"outlined\">\n                        {availableQuestions && (\n                            <InputLabel id=\"demo-simple-select-outlined-label\">\n                                <Translation>selectMode</Translation>\n                            </InputLabel>\n                        )}\n                        <Select\n                            labelId=\"demo-simple-select-outlined-label\"\n                            id=\"demo-simple-select-outlined\"\n                            value={mode}\n                            displayEmpty\n                            onChange={(e) => setMode(e.target.value as TestMode)}\n                            label={<Translation>selectMode</Translation>}\n                            variant=\"outlined\"\n                        >\n                            {Object.values(TestMode).map((value) => (\n                                <MenuItem value={value} key={value}>\n                                    <Translation>{value}</Translation>\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n\n                    <TextField\n                        id=\"outlined-number\"\n                        label={<Translation>questionCount</Translation>}\n                        type=\"number\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        value={count}\n                        variant=\"outlined\"\n                        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                            setCount(parseInt(event.target.value));\n                        }}\n                    />\n\n                    <div>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={randomOrder}\n                                    onChange={(e) => {\n                                        setRandomOrder(e.target.checked);\n                                    }}\n                                    name=\"checkedB\"\n                                    color=\"primary\"\n                                />\n                            }\n                            label={<Translation>randomOrderAllowed</Translation>}\n                        />\n                    </div>\n                </div>\n            </Paper>\n            <Paper elevation={3}>\n                <div className=\"fileUpload\">\n                    <h2 style={{ marginBottom: \"1rem\" }}>\n                        <Translation>importHeading</Translation>\n                    </h2>\n                    <div className=\"name\">\n                        <Translation>filename</Translation>: {fileName ?? <Translation>noFileSelected</Translation>}\n                    </div>\n                    <Button\n                        variant=\"contained\"\n                        component=\"label\"\n                        onChange={() => importJSON(setFileName, setQuestionSelectValue)}\n                    >\n                        <Translation>selectFile</Translation>\n                        <input type=\"file\" hidden id=\"file-upload\" />\n                    </Button>\n                </div>\n            </Paper>\n            <Paper elevation={3}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={(availableQuestions ?? []).length <= 0}\n                    onClick={() => {\n                        if ((availableQuestions?.[questionSelectValue] ?? []).length > 0) history.push(\"/trainer/\");\n                        else {\n                            if ((availableQuestions ?? []).length <= 0)\n                                toast.warning(<Translation>nothingImportedWarning</Translation>);\n                            else toast.warning(<Translation>nothingSelected</Translation>);\n                        }\n                    }}\n                >\n                    <Translation>startTest</Translation>\n                </Button>\n            </Paper>\n        </div>\n    );\n}\n\nexport default Start;\n","import { toast } from \"react-toastify\";\nimport { IQuestionSets } from \"../interfaces/ICookies\";\nimport { IQuestion } from \"../interfaces/IQuestion\";\nimport { getLocalStorage, setLocalStorage } from \"./localStorage\";\n\nexport const importJSON = (setFileName: (param: string) => void, setQuestionSelectValue: (param: string) => void) => {\n    //const [storage, setStorage] = useLocalStorage([\"questions\"]);\n\n    const inputField: any = document.getElementById(\"file-upload\");\n    const files = inputField?.files;\n\n    if (files.length <= 0) {\n        return false;\n    }\n    if (files && files[0]) setFileName(files[0].name);\n\n    const fr = new FileReader();\n\n    fr.onload = function (e: any) {\n        try {\n            const fileNameShort = files[0].name.replace(\".json\", \"\");\n            let result: IQuestion[] = JSON.parse(e.target.result);\n            result = result.map((item: IQuestion, index: number) => {\n                item.id = index;\n                item.correct = item.correct - 1;\n                return item;\n            });\n            setLocalStorage<IQuestionSets>(\"questions\", {\n                ...getLocalStorage<IQuestionSets>(\"questions\"),\n                [fileNameShort]: result,\n            });\n            setQuestionSelectValue(fileNameShort);\n            toast.success(\"Es wurden \" + result.length + \" Fragen erfolgreich importiert!\");\n        } catch (error) {\n            toast.error(\"Beim importieren der Fragen ist ein Fehler aufgetreten. Bitte überprüfe deine .json Datei\");\n        }\n    };\n\n    fr.readAsText(files.item(0));\n};\n","import { CircularProgress } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { ISettings } from \"../interfaces/ICookies\";\nimport { useLocalStorage } from \"../util/localStorage\";\nimport Translation from \"../util/Translation\";\n\ninterface ParsedTextProps {\n    children: string;\n}\nconst ParsedText = ({ children }: ParsedTextProps) => {\n    const re = /img([^)]*)\\)/;\n    const words = children.split(re);\n\n    const [settings] = useLocalStorage<ISettings>(\"settings\");\n    const [isLoading, setIsLoading] = useState<number[]>([]);\n    return (\n        <div className={\"parsedText\"}>\n            {words.map((word, index) => {\n                if (index % 2 === 0) {\n                    if (settings?.useDangerouslySetInnerHTML)\n                        return <div key={index} dangerouslySetInnerHTML={{ __html: word }}></div>;\n                    else return <div key={index}>{word}</div>;\n                } else if (index % 2 === 1) {\n                    return (\n                        <div key={index + \"image\"}>\n                            {!isLoading.includes(index) && (\n                                <div className=\"spinner\">\n                                    <CircularProgress />\n                                </div>\n                            )}\n                            <img\n                                style={{ display: isLoading.includes(index) ? \"inline\" : \"none\" }}\n                                onLoad={() => {\n                                    setIsLoading([...isLoading, index]);\n                                }}\n                                onError={() => {\n                                    setIsLoading([...isLoading, index]);\n                                    toast.error(\n                                        <div>\n                                            <Translation>imageLoadError</Translation>\n                                            <a\n                                                href={word.substring(1, word.length)}\n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                            >\n                                                <Translation>image</Translation>\n                                            </a>\n                                        </div>,\n                                        { autoClose: false }\n                                    );\n                                    console.error(\"Could not load image \", word.substring(1, word.length));\n                                }}\n                                src={word.substring(1, word.length)}\n                            />\n                        </div>\n                    );\n                }\n            })}\n        </div>\n    );\n};\n\nexport default ParsedText;\n","import { Accordion, AccordionDetails, AccordionSummary, Button, Paper, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ParsedText from \"./ParsedText\";\nimport { useHistory } from \"react-router-dom\";\nimport Translation from \"../util/Translation\";\nimport { removeLocalStorage, useLocalStorage } from \"../util/localStorage\";\nimport { ICurrentTest, IQuestionSets, ITestOptions } from \"../interfaces/ICookies\";\n\nconst Result = () => {\n    const [currentTest] = useLocalStorage<ICurrentTest>(\"currentTest\");\n    const [testOptions] = useLocalStorage<ITestOptions>(\"testOptions\");\n    const [allQuestions] = useLocalStorage<IQuestionSets>(\"questions\");\n\n    if (!testOptions?.questionSet || !allQuestions || !allQuestions[testOptions?.questionSet]) {\n        return <div>Someting went wrong</div>;\n    }\n    const questions = allQuestions[testOptions?.questionSet];\n    let correctAnswers = 0;\n    let wrongAnswers = 0;\n\n    const history = useHistory();\n    currentTest?.givenAnswers.forEach((item) => {\n        if (String(item.correct) == item.given) correctAnswers++;\n        else wrongAnswers++;\n    });\n\n    const correctPercent = Math.round((correctAnswers / (correctAnswers + wrongAnswers)) * 100);\n    return (\n        <div className=\"result\">\n            <Paper elevation={3}>\n                <h1>\n                    <Translation>result</Translation>\n                </h1>\n                <div className=\"percentage\">\n                    <span className={\"percentageNumber\" + (correctPercent >= 50 ? \" good\" : \" bad\")}>\n                        {correctPercent}%\n                    </span>\n                    <span>\n                        <Translation>resultText</Translation>\n                    </span>\n                </div>\n                <div className=\"count\">\n                    <span className=\"correctCount\">{correctAnswers}</span>\n                    <span>\n                        <Translation>questionsCorrect</Translation>\n                    </span>\n                </div>\n                <div className=\"count\">\n                    <span className=\"falseCount\">{wrongAnswers}</span>\n                    <span>\n                        <Translation>questionsWrong</Translation>\n                    </span>\n                </div>\n            </Paper>\n\n            <div className=\"repeat\">\n                {currentTest?.givenAnswers.map((answer, index) => {\n                    return (\n                        <div key={answer.questionIndex}>\n                            <Accordion\n                                className={\n                                    \"restultQuestion \" + (String(answer.correct) === answer.given ? \"correct\" : \"false\")\n                                }\n                            >\n                                <AccordionSummary\n                                    expandIcon={<ExpandMoreIcon />}\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography>\n                                        <Translation>question</Translation> {index + 1}\n                                    </Typography>\n                                </AccordionSummary>\n                                <AccordionDetails>\n                                    <div className=\"details\">\n                                        <h2>\n                                            <Translation>question</Translation>\n                                        </h2>\n                                        <ParsedText>\n                                            {questions[currentTest.questionOrder[answer.questionIndex]].question}\n                                        </ParsedText>\n\n                                        {!isNaN(parseInt(answer.given)) && (\n                                            <>\n                                                <h2>\n                                                    <Translation>yourAnswer</Translation>\n                                                </h2>\n                                                <ParsedText>\n                                                    {questions[answer.questionIndex].answers[parseInt(answer.given)]}\n                                                </ParsedText>\n                                            </>\n                                        )}\n                                        <h2>\n                                            <Translation>correctAnswer</Translation>\n                                        </h2>\n                                        <ParsedText>\n                                            {questions[answer.questionIndex].answers[answer.correct]}\n                                        </ParsedText>\n                                    </div>\n                                </AccordionDetails>\n                            </Accordion>\n                        </div>\n                    );\n                })}\n            </div>\n            <Paper elevation={3}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => {\n                        removeLocalStorage(\"currentTest\");\n                        history.push(\"/\");\n                    }}\n                >\n                    <Translation>repeat</Translation>\n                </Button>\n            </Paper>\n        </div>\n    );\n};\n\nexport default Result;\n","import React from \"react\";\n\nconst PrivacyStatement = () => {\n    return (\n        <div>\n            <h1>Datenschutzerklärung</h1>\n            <p>\n                Verantwortlicher im Sinne der Datenschutzgesetze, insbesondere der EU-Datenschutzgrundverordnung\n                (DSGVO), ist:\n            </p>\n            <p>\n                Jonathan Schad\n                <br />\n                Eschollbrückerstr. 28D\n                <br />\n                64295 Darmstadt\n                <br />\n                mail@jschad.de\n            </p>\n            <h2>Ihre Betroffenenrechte</h2>\n            <p>\n                Unter den angegebenen Kontaktdaten unseres Datenschutzbeauftragten können Sie jederzeit folgende Rechte\n                ausüben:\n            </p>\n            <ul>\n                <li>Auskunft über Ihre bei uns gespeicherten Daten und deren Verarbeitung (Art. 15 DSGVO),</li>\n                <li>Berichtigung unrichtiger personenbezogener Daten (Art. 16 DSGVO),</li>\n                <li>Löschung Ihrer bei uns gespeicherten Daten (Art. 17 DSGVO),</li>\n                <li>\n                    Einschränkung der Datenverarbeitung, sofern wir Ihre Daten aufgrund gesetzlicher Pflichten noch\n                    nicht löschen dürfen (Art. 18 DSGVO),\n                </li>\n                <li>Widerspruch gegen die Verarbeitung Ihrer Daten bei uns (Art. 21 DSGVO) und</li>\n                <li>\n                    Datenübertragbarkeit, sofern Sie in die Datenverarbeitung eingewilligt haben oder einen Vertrag mit\n                    uns abgeschlossen haben (Art. 20 DSGVO).\n                </li>\n            </ul>\n            <p>\n                Sofern Sie uns eine Einwilligung erteilt haben, können Sie diese jederzeit mit Wirkung für die Zukunft\n                widerrufen.\n            </p>\n            <p>\n                Sie können sich jederzeit mit einer Beschwerde an eine Aufsichtsbehörde wenden, z. B. an die zuständige\n                Aufsichtsbehörde des Bundeslands Ihres Wohnsitzes oder an die für uns als verantwortliche Stelle\n                zuständige Behörde.\n            </p>\n            <p>\n                Eine Liste der Aufsichtsbehörden (für den nichtöffentlichen Bereich) mit Anschrift finden Sie unter:{\" \"}\n                <a\n                    href=\"https://www.bfdi.bund.de/DE/Infothek/Anschriften_Links/anschriften_links-node.html\"\n                    target=\"_blank\"\n                    rel=\"nofollow noopener noreferrer\"\n                >\n                    https://www.bfdi.bund.de/DE/Infothek/Anschriften_Links/anschriften_links-node.html\n                </a>\n                .\n            </p>\n            <p></p>\n            <h2>Erfassung allgemeiner Informationen beim Besuch unserer Website</h2>\n            <h3>Art und Zweck der Verarbeitung:</h3>\n            <p>\n                Wenn Sie auf unsere Website zugreifen, d.h., wenn Sie sich nicht registrieren oder anderweitig\n                Informationen übermitteln, werden automatisch Informationen allgemeiner Natur erfasst. Diese\n                Informationen (Server-Logfiles) beinhalten etwa die Art des Webbrowsers, das verwendete Betriebssystem,\n                den Domainnamen Ihres Internet-Service-Providers, Ihre IP-Adresse und ähnliches.{\" \"}\n            </p>\n            <p>Sie werden insbesondere zu folgenden Zwecken verarbeitet:</p>\n            <ul>\n                <li>Sicherstellung eines problemlosen Verbindungsaufbaus der Website,</li>\n                <li>Sicherstellung einer reibungslosen Nutzung unserer Website,</li>\n                <li>Auswertung der Systemsicherheit und -stabilität sowie</li>\n                <li>zur Optimierung unserer Website.</li>\n            </ul>\n            <p>\n                Wir verwenden Ihre Daten nicht, um Rückschlüsse auf Ihre Person zu ziehen. Informationen dieser Art\n                werden von uns ggfs. anonymisiert statistisch ausgewertet, um unseren Internetauftritt und die\n                dahinterstehende Technik zu optimieren.{\" \"}\n            </p>\n            <h3>Rechtsgrundlage und berechtigtes Interesse:</h3>\n            <p>\n                Die Verarbeitung erfolgt gemäß Art. 6 Abs. 1 lit. f DSGVO auf Basis unseres berechtigten Interesses an\n                der Verbesserung der Stabilität und Funktionalität unserer Website.\n            </p>\n            <h3>Empfänger:</h3>\n            <p>\n                Empfänger der Daten sind ggf. technische Dienstleister, die für den Betrieb und die Wartung unserer\n                Webseite als Auftragsverarbeiter tätig werden.\n            </p>\n            <p></p>\n            <h3>Drittlandtransfer:</h3>\n            <p>Die erhobenen Daten werden ggfs. in folgende Drittländer übertragen: </p>\n            <p>United States</p>\n            <p>Folgende Datenschutzgarantien liegen vor: </p>\n            <p>Angemessenheitsbeschluss EU-Kommission</p>\n            <p></p>\n            <h3>Speicherdauer:</h3>\n            <p>\n                Die Daten werden gelöscht, sobald diese für den Zweck der Erhebung nicht mehr erforderlich sind. Dies\n                ist für die Daten, die der Bereitstellung der Website dienen, grundsätzlich der Fall, wenn die jeweilige\n                Sitzung beendet ist.{\" \"}\n            </p>\n            <p>\n                {\" \"}\n                Im Falle der Speicherung der Daten in Logfiles ist dies nach spätestens 14 Tagen der Fall. Eine\n                darüberhinausgehende Speicherung ist möglich. In diesem Fall werden die IP-Adressen der Nutzer\n                anonymisiert, sodass eine Zuordnung des aufrufenden Clients nicht mehr möglich ist.\n            </p>\n            <p></p>\n            <h3>Bereitstellung vorgeschrieben oder erforderlich:</h3>\n            <p>\n                Die Bereitstellung der vorgenannten personenbezogenen Daten ist weder gesetzlich noch vertraglich\n                vorgeschrieben. Ohne die IP-Adresse ist jedoch der Dienst und die Funktionsfähigkeit unserer Website\n                nicht gewährleistet. Zudem können einzelne Dienste und Services nicht verfügbar oder eingeschränkt sein.\n                Aus diesem Grund ist ein Widerspruch ausgeschlossen.{\" \"}\n            </p>\n            <p></p>\n            <h2>Cookies</h2>\n            <p>\n                Wie viele andere Webseiten verwenden wir auch so genannte „Cookies“. Bei Cookies handelt es sich um\n                kleine Textdateien, die auf Ihrem Endgerät (Laptop, Tablet, Smartphone o.ä.) gespeichert werden, wenn\n                Sie unsere Webseite besuchen.{\" \"}\n            </p>\n            <p>\n                Sie können Sie einzelne Cookies oder den gesamten Cookie-Bestand löschen. Darüber hinaus erhalten Sie\n                Informationen und Anleitungen, wie diese Cookies gelöscht oder deren Speicherung vorab blockiert werden\n                können. Je nach Anbieter Ihres Browsers finden Sie die notwendigen Informationen unter den nachfolgenden\n                Links:\n            </p>\n            <ul>\n                <li>\n                    Mozilla Firefox:{\" \"}\n                    <a\n                        href=\"https://support.mozilla.org/de/kb/cookies-loeschen-daten-von-websites-entfernen\"\n                        target=\"_blank\"\n                        rel=\"nofollow noopener noreferrer\"\n                    >\n                        https://support.mozilla.org/de/kb/cookies-loeschen-daten-von-websites-entfernen\n                    </a>\n                </li>\n                <li>\n                    Internet Explorer:{\" \"}\n                    <a\n                        href=\"https://support.microsoft.com/de-de/help/17442/windows-internet-explorer-delete-manage-cookies\"\n                        target=\"_blank\"\n                        rel=\"nofollow noopener noreferrer\"\n                    >\n                        https://support.microsoft.com/de-de/help/17442/windows-internet-explorer-delete-manage-cookies\n                    </a>\n                </li>\n                <li>\n                    Google Chrome:{\" \"}\n                    <a\n                        href=\"https://support.google.com/accounts/answer/61416?hl=de\"\n                        target=\"_blank\"\n                        rel=\"nofollow noopener noreferrer\"\n                    >\n                        https://support.google.com/accounts/answer/61416?hl=de\n                    </a>\n                </li>\n                <li>\n                    Opera:{\" \"}\n                    <a href=\"http://www.opera.com/de/help\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n                        http://www.opera.com/de/help\n                    </a>\n                </li>\n                <li>\n                    Safari:{\" \"}\n                    <a\n                        href=\"https://support.apple.com/kb/PH17191?locale=de_DE&viewlocale=de_DE\"\n                        target=\"_blank\"\n                        rel=\"nofollow noopener noreferrer\"\n                    >\n                        https://support.apple.com/kb/PH17191?locale=de_DE&viewlocale=de_DE\n                    </a>\n                </li>\n            </ul>\n            <h3>Speicherdauer und eingesetzte Cookies:</h3>\n            <p>\n                Soweit Sie uns durch Ihre Browsereinstellungen oder Zustimmung die Verwendung von Cookies erlauben,\n                können folgende Cookies auf unseren Webseiten zum Einsatz kommen:\n            </p>\n            <p></p>\n            <h2>Technisch notwendige Cookies </h2>\n            <h3>Art und Zweck der Verarbeitung: </h3>\n            <p>\n                Wir setzen Cookies ein, um unsere Website nutzerfreundlicher zu gestalten. Einige Elemente unserer\n                Internetseite erfordern es, dass der aufrufende Browser auch nach einem Seitenwechsel identifiziert\n                werden kann.\n            </p>\n            <p>\n                Der Zweck der Verwendung technisch notwendiger Cookies ist, die Nutzung von Websites für die Nutzer zu\n                vereinfachen. Einige Funktionen unserer Internetseite können ohne den Einsatz von Cookies nicht\n                angeboten werden. Für diese ist es erforderlich, dass der Browser auch nach einem Seitenwechsel\n                wiedererkannt wird.\n            </p>\n            <p>Für folgende Anwendungen benötigen wir Cookies:</p>\n            <p>Übernahme von Einstellungen</p>\n            <p>Speichern der Imprtierten Fragedaten</p>\n            <h3>Rechtsgrundlage und berechtigtes Interesse: </h3>\n            <p>\n                Die Verarbeitung erfolgt gemäß Art. 6 Abs. 1 lit. f DSGVO auf Basis unseres berechtigten Interesses an\n                einer nutzerfreundlichen Gestaltung unserer Website.\n            </p>\n            <h3>Empfänger: </h3>\n            <p>\n                Empfänger der Daten sind ggf. technische Dienstleister, die für den Betrieb und die Wartung unserer\n                Website als Auftragsverarbeiter tätig werden.\n            </p>\n            <p></p>\n            <h3>Bereitstellung vorgeschrieben oder erforderlich:</h3>\n            <p>\n                Die Bereitstellung der vorgenannten personenbezogenen Daten ist weder gesetzlich noch vertraglich\n                vorgeschrieben. Ohne diese Daten ist jedoch der Dienst und die Funktionsfähigkeit unserer Website nicht\n                gewährleistet. Zudem können einzelne Dienste und Services nicht verfügbar oder eingeschränkt sein.\n            </p>\n            <h3>Widerspruch</h3>\n            <p>Lesen Sie dazu die Informationen über Ihr Widerspruchsrecht nach Art. 21 DSGVO weiter unten.</p>\n            <p></p>\n            <h2>Verwendung von Scriptbibliotheken (Google Webfonts)</h2>\n            <p>\n                Um unsere Inhalte browserübergreifend korrekt und grafisch ansprechend darzustellen, verwenden wir auf\n                dieser Website „Google Web Fonts“ der Google LLC (1600 Amphitheatre Parkway, Mountain View, CA 94043,\n                USA; nachfolgend „Google“) zur Darstellung von Schriften.\n            </p>\n            <p>\n                Weitere Informationen zu Google Web Fonts finden Sie unter{\" \"}\n                <a href=\"https://developers.google.com/fonts/faq\" rel=\"noopener nofollow noreferrer\" target=\"_blank\">\n                    https://developers.google.com/fonts/faq\n                </a>{\" \"}\n                und in der Datenschutzerklärung von Google:{\" \"}\n                <a href=\"https://www.google.com/policies/privacy/\" rel=\"noopener nofollow noreferrer\" target=\"_blank\">\n                    https://www.google.com/policies/privacy/\n                </a>\n                .\n            </p>\n            <p></p>\n            <h2>Daten-Erhebung durch die Nutzung von GitHub Pages</h2>\n\n            <p>\n                Diese Website wird auf Servern von{\" \"}\n                <a href=\"https://www.github.com\">Github Inc., 88 Colin P Kelly Jr St, San Francisco, CA 94107, USA</a>\n                gehostet. Beachten Sie daher auch die{\" \"}\n                <a href=\"https://help.github.com/articles/github-privacy-policy/\">GitHub Privacy Policy</a> und{\" \"}\n                <a href=\"https://help.github.com/articles/global-privacy-practices/\">GitHub Global Privacy Practices</a>\n                . Github verfügt über eine Zertifizierung nach dem EU-US-Privacy-Shield. Der Privacy-Shield ist ein\n                Übereinkommen zwischen der Europäischen Union (EU) und den USA, das die Einhaltung europäischer\n                Datenschutzstandards in den USA gewährleisten soll. Siehe dazu die{\" \"}\n                <a href=\"https://www.privacyshield.gov/participant?id=a2zt000000001K2AAI&amp;status=Active\">\n                    Privacy Shield Compliance Erklärung\n                </a>{\" \"}\n                von Github.\n            </p>\n            <h2>Sentry</h2>\n            <p>\n                Wir verwenden eine selbstgehostete Version von Sentry, um die technische Stabilität unseres Dienstes\n                durch Überwachung der Systemstabilität und Ermittlung von Codefehlern zu verbessern. Sentry dient\n                alleine diesen Zielen und wertet keine Daten zu Werbezwecken aus. Die Daten der Nutzer, wie z.B. Angaben\n                zum Gerät oder Fehlerzeitpunkt werden anonym erhoben und nicht personenbezogen genutzt sowie\n                anschließend gelöscht.\n            </p>\n            <p>Die Sentry Instanz wird auf einem Server von Netcup bereitgestellt: </p>\n            <p>netcup GmbH Daimlerstraße 25 D-76185 Karlsruhe</p>\n            <h2>SSL-Verschlüsselung</h2>\n            <p>\n                Um die Sicherheit Ihrer Daten bei der Übertragung zu schützen, verwenden wir dem aktuellen Stand der\n                Technik entsprechende Verschlüsselungsverfahren (z. B. SSL) über HTTPS.\n            </p>\n            <p></p>\n            <h2>plausible.io</h2>\n            <p>\n                Wir verwenden den eine selbstgehostete Instanz von Plausible (https://plausible.io), um Statistiken über\n                die Nutzung unserer Website zu erheben. Wir lesen daraus u.a. ab, welche Inhalte bei unserer Leserschaft\n                gut ankommen. Informationen dazu, welche Daten verarbeitet werden, finden Sie hier:\n                https://plausible.io/data-policy Betroffene Personen: Nutzer (z.B. Webseitenbesucher, Nutzer von\n                Onlinediensten). Zwecke der Verarbeitung: Reichweitenmessung (z.B. Zugriffsstatistiken, Erkennung\n                wiederkehrender Besucher), Tracking (z.B. interessens-/verhaltensbezogenes Profiling, Nutzung von\n                Cookies), Besuchsaktionsauswertung, Profiling (Erstellen von Nutzerprofilen). Sicherheitsmaßnahmen:\n                IP-Masking (Pseudonymisierung der IP-Adresse). Rechtsgrundlagen: Einwilligung (Art. 6 Abs. 1 S. 1 lit. a\n                DSGVO), Berechtigte Interessen (Art. 6 Abs. 1 S. 1 lit. f. DSGVO).\n            </p>\n            <p>Die Plausible Instanz wird auf einem Server von Netcup bereitgestellt: </p>\n            <p>netcup GmbH Daimlerstraße 25 D-76185 Karlsruhe</p>\n            <h2>SSL-Verschlüsselung</h2>\n            <hr></hr>\n            <h2>Information über Ihr Widerspruchsrecht nach Art. 21 DSGVO</h2>\n            <h3>Einzelfallbezogenes Widerspruchsrecht</h3>\n            <p>\n                Sie haben das Recht, aus Gründen, die sich aus Ihrer besonderen Situation ergeben, jederzeit gegen die\n                Verarbeitung Sie betreffender personenbezogener Daten, die aufgrund Art. 6 Abs. 1 lit. f DSGVO\n                (Datenverarbeitung auf der Grundlage einer Interessenabwägung) erfolgt, Widerspruch einzulegen; dies\n                gilt auch für ein auf diese Bestimmung gestütztes Profiling im Sinne von Art. 4 Nr. 4 DSGVO.\n            </p>\n            <p>\n                Legen Sie Widerspruch ein, werden wir Ihre personenbezogenen Daten nicht mehr verarbeiten, es sei denn,\n                wir können zwingende schutzwürdige Gründe für die Verarbeitung nachweisen, die Ihre Interessen, Rechte\n                und Freiheiten überwiegen, oder die Verarbeitung dient der Geltendmachung, Ausübung oder Verteidigung\n                von Rechtsansprüchen.\n            </p>\n            <h3>Empfänger eines Widerspruchs</h3>\n            <p>\n                Jonathan Schad\n                <br />\n                mail@jschad.de\n            </p>\n            <hr />\n            <h2>Änderung unserer Datenschutzbestimmungen</h2>\n            <p>\n                Wir behalten uns vor, diese Datenschutzerklärung anzupassen, damit sie stets den aktuellen rechtlichen\n                Anforderungen entspricht oder um Änderungen unserer Leistungen in der Datenschutzerklärung umzusetzen,\n                z.B. bei der Einführung neuer Services. Für Ihren erneuten Besuch gilt dann die neue\n                Datenschutzerklärung.\n            </p>\n            <h2>Fragen an den Datenschutzbeauftragten</h2>\n            <p>\n                Wenn Sie Fragen zum Datenschutz haben, schreiben Sie uns bitte eine E-Mail oder wenden Sie sich direkt\n                an die für den Datenschutz verantwortliche Person in unserer Organisation:\n            </p>\n            <p>mail@jschad.de</p>\n            <p>\n                <em>\n                    Die Datenschutzerklärung wurde mithilfe der activeMind AG erstellt, den Experten für{\" \"}\n                    <a\n                        href=\"https://www.activemind.de/datenschutz/datenschutzbeauftragter/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        externe Datenschutzbeauftragte\n                    </a>{\" \"}\n                    (Version #2020-09-30).\n                </em>\n            </p>\n        </div>\n    );\n};\nexport default PrivacyStatement;\n","import React from \"react\";\n\nconst Imprint = () => {\n    return (\n        <div>\n            <h2>Impressum</h2>\n            <p>Jonathan Schad</p>\n            <p>Eschollbrückerstr. 28D</p>\n            <p>64295 Darmstadt</p>\n            <p>mail@jschad.de</p>\n        </div>\n    );\n};\nexport default Imprint;\n","export const shuffleAnswers = (answers: string[], oldCorrect: number) => {\n    answers = JSON.parse(JSON.stringify(answers));\n    let currentIndex = answers.length,\n        temporaryValue,\n        randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        if (currentIndex == oldCorrect) oldCorrect = randomIndex;\n        else if (randomIndex == oldCorrect) oldCorrect = currentIndex;\n\n        // And swap it with the current element.\n        temporaryValue = answers[currentIndex];\n        answers[currentIndex] = answers[randomIndex];\n        answers[randomIndex] = temporaryValue;\n    }\n\n    return { answers, correct: oldCorrect };\n};\n","export const sameValues = (base: any, check: any): boolean => {\n    let same = true;\n\n    if (typeof base === \"object\") {\n        try {\n            Object.keys(base).forEach((key) => {\n                if (typeof base[key] === \"object\") {\n                    same = sameValues(base[key], check[key]);\n                }\n                if (base[key] !== check[key]) {\n                    same = false;\n                }\n            });\n        } catch (error) {\n            same = false;\n        }\n    } else {\n        same = base === check;\n    }\n    return same;\n};\n","import { Paper, Radio } from \"@material-ui/core\";\nimport React from \"react\";\nimport Translation from \"../../util/Translation\";\nimport ParsedText from \"../ParsedText\";\n\ninterface AnswerProps {\n    answers: string[];\n    correct: number;\n    selected?: string;\n    showCorrect?: boolean;\n    setCurrentAnswer?: (value: string) => void;\n}\nconst Answers = ({ answers, selected, correct, setCurrentAnswer, showCorrect }: AnswerProps) => {\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (!showCorrect) setCurrentAnswer?.(event.target.value);\n    };\n    return (\n        <Paper elevation={3}>\n            <h2>\n                <Translation>answers</Translation>\n            </h2>\n            {answers.map((answer, index) => (\n                <div\n                    className={\n                        \"answers \" +\n                        (showCorrect ? (correct === index ? \"correct\" : selected === String(index) ? \"false\" : \"\") : \"\")\n                    }\n                    key={index}\n                >\n                    <Radio\n                        checked={selected === String(index)}\n                        value={index}\n                        onChange={handleChange}\n                        disabled={showCorrect}\n                    />\n\n                    <ParsedText>{answer}</ParsedText>\n                </div>\n            ))}\n        </Paper>\n    );\n};\nexport default Answers;\n","import { Paper } from \"@material-ui/core\";\nimport React from \"react\";\nimport Translation from \"../../util/Translation\";\nimport ParsedText from \"../ParsedText\";\n\ninterface QuestionTextProps {\n    question: string;\n}\nconst QuestionText = ({ question }: QuestionTextProps) => {\n    return (\n        <Paper elevation={3}>\n            <h2>\n                <Translation>question</Translation>\n            </h2>\n            <ParsedText>{question}</ParsedText>\n        </Paper>\n    );\n};\nexport default QuestionText;\n","import React from \"react\";\nimport { IQuestion } from \"../../interfaces/IQuestion\";\nimport Answers from \"./Answers\";\nimport QuestionText from \"./QuestionText\";\n\ninterface QuestionProps extends IQuestion {\n    currentAnswer?: string;\n    setCurrentAnswer?: (value: string) => void;\n    showCorrect?: boolean;\n}\nconst Question = ({ question, answers, correct, currentAnswer, setCurrentAnswer, showCorrect }: QuestionProps) => {\n    return (\n        <div className=\"question\">\n            <QuestionText question={question} />\n            <Answers\n                answers={answers}\n                correct={correct}\n                selected={currentAnswer}\n                setCurrentAnswer={setCurrentAnswer}\n                showCorrect={showCorrect}\n            />\n        </div>\n    );\n};\nexport default Question;\n","import { Button, Paper } from \"@material-ui/core\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport Translation from \"../../util/Translation\";\n\ninterface TestNavigationProps {\n    currentState?: string;\n    checked: boolean;\n    checkAnswers: () => void;\n    next?: () => void;\n}\nconst TestNavigation = (props: TestNavigationProps) => {\n    if (props.checked && !props.next) return null;\n    return (\n        <Paper elevation={3}>\n            <div className=\"questionNavi\">\n                {props.checked ? (\n                    props.next && (\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                                props.next?.();\n                            }}\n                        >\n                            <Translation>next</Translation>\n                        </Button>\n                    )\n                ) : (\n                    <div\n                        onClick={() => {\n                            if (!props.currentState) toast.warning(\"Du hast keine Antwort ausgewählt!\");\n                        }}\n                    >\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => props.checkAnswers()}\n                            disabled={!props.currentState}\n                        >\n                            <Translation>check</Translation>\n                        </Button>\n                    </div>\n                )}\n            </div>\n        </Paper>\n    );\n};\nexport default TestNavigation;\n","import { Button, Paper } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\n\ninterface TestProgressProps {\n    active: number;\n    count: number;\n    prev: () => void;\n    next: () => void;\n    goTo: (pageNumber: number) => void;\n}\nlet timeoutId: number | null = null;\n\nconst TestProgress = (props: TestProgressProps) => {\n    const [inputValue, setInputValue] = useState<number>(props.active + 1);\n\n    useEffect(() => setInputValue(props.active + 1), [props.active]);\n    return (\n        <Paper elevation={3}>\n            <div className=\"stepper\">\n                <Button size=\"small\" onClick={props.prev} disabled={props.active === 0}>\n                    <KeyboardArrowLeft />\n                    Back\n                </Button>\n                <div>\n                    <input\n                        type=\"number\"\n                        min={1}\n                        max={props.count}\n                        step={1}\n                        value={inputValue}\n                        onChange={(e) => {\n                            let parsedValue = parseInt(e.target.value);\n                            if (parsedValue > props.count) parsedValue = props.count;\n                            if (parsedValue < 1) parsedValue = 1;\n                            console.log(\"cahnge\", parsedValue);\n                            if (timeoutId) {\n                                console.log(\"canceled timeout\");\n\n                                window.clearTimeout();\n                            }\n                            if (!isNaN(parsedValue)) {\n                                timeoutId = window.setTimeout(() => {\n                                    timeoutId = null;\n                                    console.log(\"timeout\", parsedValue);\n                                    props.goTo(parsedValue);\n                                }, 1000);\n                            }\n                            setInputValue(parsedValue);\n                        }}\n                    />\n                    {\" / \"}\n                    {props.count}\n                </div>\n                <Button size=\"small\" onClick={props.next} disabled={props.active >= props.count - 1}>\n                    Next\n                    <KeyboardArrowRight />\n                </Button>\n            </div>\n        </Paper>\n    );\n};\nexport default TestProgress;\n","import { Button, Paper } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { ICurrentTest, IStats, QuestionState } from \"../../interfaces/ICookies\";\nimport { IQuestion } from \"../../interfaces/IQuestion\";\nimport { useLocalStorage } from \"../../util/localStorage\";\nimport Translation from \"../../util/Translation\";\nimport Question from \"../question/Question\";\nimport TestNavigation from \"./TestNavigation\";\nimport TestProgress from \"./TestProgress\";\n\ninterface TestParams {\n    progress: number;\n    test: IQuestion[];\n    questionSet: string;\n}\n\nconst Test = ({ progress, test, questionSet }: TestParams) => {\n    const [currentTest, setCurrentTest] = useLocalStorage<ICurrentTest>(\"currentTest\");\n    const [stats, setStats] = useLocalStorage<IStats>(\"stats\");\n\n    const [currentAnswer, setCurrentAnswer] = useState<string>(\"\");\n\n    const history = useHistory();\n\n    if (progress >= test.length) {\n        console.log(progress, test.length);\n        const index = currentTest?.givenAnswers.findIndex((item) => !item) ?? 1;\n        if (index >= 0) {\n            history.push(\"/trainer/\" + (index + 1));\n            window.setTimeout(() => {\n                toast.info(<Translation>stillRemainingQuestions</Translation>);\n            }, 1000);\n        } else history.push(\"/result\");\n    }\n\n    const onAnswerSubmitted = () => {\n        const currentTestNew = currentTest ?? ({ questionOrder: [], usedOptions: {}, givenAnswers: [] } as any);\n        if (isNaN(parseInt(currentAnswer))) {\n            toast.warning(<Translation>noAnswerSelected</Translation>);\n        } else if (!currentTestNew?.givenAnswers[progress]) {\n            const question = test[progress];\n\n            const state = question.correct === parseInt(currentAnswer) ? QuestionState.Correct : QuestionState.Wrong;\n\n            const newStats = stats ?? {};\n            newStats[questionSet] = stats?.[questionSet] ?? {};\n            newStats[questionSet][question.id] = stats?.[questionSet][question.id] ?? {\n                answerHistory: [],\n                currentState: state,\n            };\n\n            newStats[questionSet][question.id].currentState = state;\n            newStats[questionSet][question.id].answerHistory.push({\n                result: state,\n                time: new Date().getTime(),\n            });\n            setStats(newStats);\n            currentTestNew.givenAnswers[progress] = {\n                questionIndex: progress,\n                given: currentAnswer,\n                correct: question.correct,\n            };\n            setCurrentTest({ ...currentTestNew });\n        }\n    };\n    useEffect(() => {\n        if (currentTest?.givenAnswers[progress]) {\n            setCurrentAnswer(currentTest.givenAnswers[progress].given);\n        } else {\n            setCurrentAnswer(\"\");\n        }\n    }, [progress]);\n    return (\n        <div>\n            <TestProgress\n                count={test.length}\n                active={progress}\n                next={() => {\n                    history.push(\"/trainer/\" + (progress + 2));\n                }}\n                prev={() => {\n                    history.push(\"/trainer/\" + progress);\n                }}\n                goTo={(pageNumber: number) => {\n                    history.push(\"/trainer/\" + pageNumber);\n                }}\n            />\n            {currentTest &&\n                currentTest.givenAnswers.length === test.length &&\n                currentTest.givenAnswers.findIndex((item) => !item?.given) < 0 && (\n                    <div className=\"resultButton\">\n                        <Paper elevation={3}>\n                            <Button variant=\"contained\" color=\"primary\" onClick={() => history.push(\"/result\")}>\n                                <Translation>goToResult</Translation>\n                            </Button>\n                        </Paper>\n                    </div>\n                )}\n            {test[progress] && (\n                <Question\n                    key={progress}\n                    {...test[progress]}\n                    currentAnswer={currentAnswer}\n                    setCurrentAnswer={setCurrentAnswer}\n                    showCorrect={!!currentTest?.givenAnswers?.[progress]?.given}\n                ></Question>\n            )}\n            <TestNavigation\n                currentState={currentAnswer}\n                checked={!!currentTest?.givenAnswers?.[progress]?.given}\n                checkAnswers={onAnswerSubmitted}\n                next={\n                    progress + 1 < test.length\n                        ? () => {\n                              history.push(\"/trainer/\" + (progress + 2));\n                          }\n                        : undefined\n                }\n            />\n        </div>\n    );\n};\n\nexport default Test;\n","import { Button } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { ICurrentTest, IQuestionSets, ITestOptions } from \"../../interfaces/ICookies\";\nimport { IQuestion } from \"../../interfaces/IQuestion\";\nimport { generateTest } from \"../../util/generateTest\";\nimport { useLocalStorage } from \"../../util/localStorage\";\nimport { sameValues } from \"../../util/sameValues\";\nimport Translation from \"../../util/Translation\";\nimport Test from \"./Test\";\n\ninterface TestParams {\n    progress?: string;\n}\n\nconst TestManager = () => {\n    const { progress } = useParams<TestParams>();\n\n    const [testOptions] = useLocalStorage<ITestOptions>(\"testOptions\");\n    const [currentTest] = useLocalStorage<ICurrentTest>(\"currentTest\");\n    const [allQuestions] = useLocalStorage<IQuestionSets>(\"questions\");\n    const history = useHistory();\n\n    const [test, setTest] = useState<IQuestion[]>([]);\n\n    if (!testOptions?.questionSet || !allQuestions || !allQuestions[testOptions?.questionSet]) {\n        return (\n            <div>\n                <h2>\n                    <Translation>invalidQuestions</Translation>\n                </h2>\n                <Button onClick={() => history.push(\"/\")} variant=\"contained\" color=\"primary\">\n                    <Translation>backToStart</Translation>\n                </Button>\n            </div>\n        );\n    }\n\n    useEffect(() => {\n        let test: IQuestion[];\n        if (\n            (currentTest?.questionOrder.length ?? 0) > 0 &&\n            sameValues(JSON.parse(currentTest?.usedOptions ?? \"{}\"), testOptions)\n        ) {\n            test = currentTest?.questionOrder.map((index) =>\n                allQuestions[testOptions.questionSet as string].find((question) => question.id === index)\n            ) as IQuestion[];\n        } else {\n            test = generateTest(testOptions?.questionSet as string);\n        }\n        setTest(test);\n    }, [testOptions?.count, testOptions?.mode, testOptions?.questionSet, testOptions?.randomOrder]);\n\n    if (test.length <= 0) {\n        return (\n            <div>\n                <h2>\n                    <Translation>noValidQuestions</Translation>\n                </h2>\n                <div>\n                    <Translation>noValidQuestionsExplination</Translation>\n                </div>\n                <Button onClick={() => history.push(\"/\")} variant=\"contained\" color=\"primary\">\n                    <Translation>backToStart</Translation>\n                </Button>\n            </div>\n        );\n    }\n\n    return <Test progress={parseInt(progress ?? \"1\") - 1} questionSet={testOptions?.questionSet} test={test} />;\n};\n\nexport default TestManager;\n","import { ICurrentTest, IQuestionSets, IStats, ITestOptions, QuestionState, TestMode } from \"../interfaces/ICookies\";\nimport { IQuestion } from \"../interfaces/IQuestion\";\nimport { getLocalStorage, setLocalStorage } from \"./localStorage\";\nimport { shuffleAnswers } from \"./shuffleAnswers\";\n\nexport const generateTest = (questionSet: string) => {\n    const allQuestions = getLocalStorage<IQuestionSets>(\"questions\");\n    const stats = getLocalStorage<IStats>(\"stats\")?.[questionSet];\n    const settings = getLocalStorage<ITestOptions>(\"testOptions\");\n\n    let questions = allQuestions?.[questionSet] ?? [];\n    if (settings?.mode === TestMode.WrongOnly) {\n        questions = questions.filter((item) => !(stats?.[item.id]?.currentState === QuestionState.Correct));\n    }\n\n    const order: number[] = [];\n    const generatedQuestions: IQuestion[] = [];\n\n    let count = settings?.count ?? 10;\n\n    if (count > questions.length) count = questions.length;\n\n    for (let index = 0; index < count; index++) {\n        let generatedIndex = Math.floor(Math.random() * questions.length);\n        while (order.includes(generatedIndex)) {\n            generatedIndex = Math.floor(Math.random() * questions.length);\n        }\n\n        order.push(generatedIndex);\n\n        const { answers, correct } = settings?.randomOrder\n            ? shuffleAnswers(questions[generatedIndex].answers, questions[generatedIndex].correct)\n            : { answers: questions[generatedIndex].answers, correct: questions[generatedIndex].correct };\n\n        generatedQuestions.push({ ...questions[generatedIndex], answers, correct });\n    }\n\n    setLocalStorage<ICurrentTest>(\"currentTest\", {\n        questionOrder: order,\n        usedOptions: JSON.stringify(settings),\n        givenAnswers: [],\n    });\n\n    return generatedQuestions;\n};\n","import React from \"react\";\nimport Start from \"./Start\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Result from \"./components/Result\";\nimport PrivacyStatement from \"./components/PrivacyStatement\";\nimport Imprint from \"./components/Imprint\";\nimport TestManager from \"./components/test/TestManager\";\n/*import QuestionSetDisplay from \"./components/editor/QuestionSetDisplay\";*/\n\nconst Routes = () => {\n    return (\n        <Switch>\n            <Route path=\"/trainer/:progress?\" component={TestManager} />\n            {/*<Route path=\"/questionSet/:questionSet?\" component={QuestionSetDisplay} />*/}\n            <Route path=\"/result\" component={Result} />\n            <Route path=\"/privacy\" component={PrivacyStatement} />\n            <Route path=\"/imprint\" component={Imprint} />\n            <Route path=\"*\">\n                <Start />\n            </Route>\n        </Switch>\n    );\n};\n\nexport default Routes;\n","import i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport de from \"./de.json\";\nimport en from \"./en.json\";\n\n/**\n * This initializes the i18n library with all the settings used in this project\n */\n\ni18n.use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        // we init with resources\n        resources: {\n            en: {\n                translations: en,\n            },\n            de: {\n                translations: de,\n            },\n        },\n        fallbackLng: \"en\",\n        debug: false,\n\n        // have a common namespace used around the full app\n        ns: [\"translations\"],\n        defaultNS: \"translations\",\n\n        keySeparator: false, // we use content as keys\n\n        interpolation: {\n            escapeValue: false,\n        },\n    });\n\nexport default i18n;\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport App from \"./App\";\nimport Routes from \"./Routes\";\n\nimport packageJSON from \"../package.json\";\nimport \"./i18n/i18n\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nconst Root = () => {\n    return (\n        <BrowserRouter basename={packageJSON.homepage}>\n            <App>\n                <Routes />\n                <ToastContainer\n                    position=\"bottom-center\"\n                    autoClose={6000}\n                    hideProgressBar={false}\n                    newestOnTop={false}\n                    closeOnClick\n                    rtl={false}\n                    pauseOnFocusLoss\n                    draggable\n                    pauseOnHover\n                />\n            </App>\n        </BrowserRouter>\n    );\n};\nexport default Root;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/css/index.scss\";\nimport * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\nimport { CaptureConsole } from \"@sentry/integrations\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Root from \"./Root\";\n\nif (process.env.REACT_APP_SENTRY === \"true\") {\n    Sentry.init({\n        dsn: \"https://b714f540d65349a68b8c2e920ba9b90e@sentry.jschad.de/2\",\n        autoSessionTracking: true,\n        integrations: [\n            new Integrations.BrowserTracing(),\n            new CaptureConsole({\n                levels: [\"error\"],\n            }),\n        ],\n\n        // We recommend adjusting this value in production, or using tracesSampler\n        // for finer control\n        tracesSampleRate: 1.0,\n    });\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <Root />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}